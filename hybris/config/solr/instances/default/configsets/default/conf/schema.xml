<?xml version="1.0" encoding="UTF-8" ?>

<!--  
 For more information, on how to customize this file, please see https://lucene.apache.org/solr/guide/8_8/documents-fields-and-schema-design.html
-->

<schema name="hybris" version="8.10">
	<types>	
		<!-- Basic Types -->
		<fieldType name="keywordfilter" class="solr.TextField" sortMissingLast="true" omitNorms="true">
			<analyzer type="index">
				<tokenizer class="solr.KeywordTokenizerFactory" />
				<filter class="solr.LowerCaseFilterFactory" />
			</analyzer>
			<analyzer type="query">
				<tokenizer class="solr.KeywordTokenizerFactory" />
				<filter class="solr.LowerCaseFilterFactory" />
			</analyzer>
		</fieldType>
		
		

		<fieldType name="boolean" class="solr.BoolField" docValues="true" sortMissingLast="true" />
		<fieldType name="int" class="solr.IntPointField" docValues="true" sortMissingLast="true" />
		<fieldType name="long" class="solr.LongPointField" docValues="true" sortMissingLast="true" />
		<fieldType name="float" class="solr.FloatPointField" docValues="true" sortMissingLast="true" />
		<fieldType name="double" class="solr.DoublePointField" docValues="true" sortMissingLast="true" />
		<fieldType name="date" class="solr.DatePointField" docValues="true" sortMissingLast="true" />
		<fieldType name="string" class="solr.StrField" docValues="true" sortMissingLast="true" />


		<!-- SST custom START -->
		<!-- Text -->
		<fieldType name="text" class="solr.TextField" positionIncrementGap="100">
			<analyzer type="index">
				<charFilter class="solr.PatternReplaceCharFilterFactory" pattern="[™ ® , \- &apos; &quot;]" replacement=" "/>
				<charFilter class="solr.PatternReplaceCharFilterFactory" pattern="(\d+)\s?\/\s?(\d+)" replacement="$1over$2"/>
				<charFilter class="solr.PatternReplaceCharFilterFactory" pattern="(\d+)[\s-]+\s?(\d+over\d+)" replacement="$1and$2"/>
				<charFilter class="solr.PatternReplaceCharFilterFactory" pattern="(\d+)(?:\s*x\s*|\s*by\s*)(\d+)" replacement="$1by$2"/>
				<tokenizer class="solr.WhitespaceTokenizerFactory" />
				<filter class="solr.EnglishPossessiveFilterFactory" />
				<filter class="solr.ManagedStopFilterFactory" managed="en" />
				<filter class="solr.KeywordRepeatFilterFactory" />
				<filter class="solr.WordDelimiterGraphFilterFactory" generateWordParts="1" generateNumberParts="0" catenateWords="1" catenateNumbers="0" catenateAll="0" splitOnNumerics="1" splitOnCaseChange="0" preserveOriginal="1"/>
				<filter class="solr.FlattenGraphFilterFactory"/> <!-- required on index analyzers after graph filters -->
				<filter class="solr.LowerCaseFilterFactory" />
				<filter class="solr.SnowballPorterFilterFactory" language="English" protected="protwords.txt" />
				<filter class="solr.LengthFilterFactory" min="2" max="50"/>
				<filter class="solr.RemoveDuplicatesTokenFilterFactory" />
			</analyzer>
			<analyzer type="query">
				<charFilter class="solr.PatternReplaceCharFilterFactory" pattern="[™ ® , \- &apos; &quot;]" replacement=" "/>
				<charFilter class="solr.PatternReplaceCharFilterFactory" pattern="(\d+)\s?\/\s?(\d+)" replacement="$1over$2"/>
				<charFilter class="solr.PatternReplaceCharFilterFactory" pattern="(\d+)[\s-]+\s?(\d+over\d+)" replacement="$1and$2"/>
				<charFilter class="solr.PatternReplaceCharFilterFactory" pattern="(\d+)(?:\s*x\s*|\s*by\s*)(\d+)" replacement="$1by$2"/>
				<tokenizer class="solr.WhitespaceTokenizerFactory" />
				<filter class="solr.EnglishPossessiveFilterFactory" />
				<filter class="solr.ManagedStopFilterFactory" managed="en" />
				<filter class="solr.KeywordRepeatFilterFactory" />
				<filter class="solr.LowerCaseFilterFactory" />
				<filter class="solr.SnowballPorterFilterFactory" language="English" protected="protwords.txt" />
				<filter class="solr.ManagedSynonymGraphFilterFactory" managed="en" />
				<filter class="solr.LengthFilterFactory" min="2" max="50"/>
				<filter class="solr.RemoveDuplicatesTokenFilterFactory" />
			</analyzer>
		</fieldType>

		<!-- Text English (en) -->

		<fieldType name="text_en" class="solr.TextField" positionIncrementGap="100">
			<analyzer type="index">
				<charFilter class="solr.PatternReplaceCharFilterFactory" pattern="[™ ® , \- &apos; &quot;]" replacement=" "/>
				<charFilter class="solr.PatternReplaceCharFilterFactory" pattern="(\d+)\s?\/\s?(\d+)" replacement="$1over$2"/>
				<charFilter class="solr.PatternReplaceCharFilterFactory" pattern="(\d+)[\s-]+\s?(\d+over\d+)" replacement="$1and$2"/>
				<charFilter class="solr.PatternReplaceCharFilterFactory" pattern="(\d+)(?:\s*x\s*|\s*by\s*)(\d+)" replacement="$1by$2"/>
				<tokenizer class="solr.WhitespaceTokenizerFactory" />
				<filter class="solr.EnglishPossessiveFilterFactory" />
				<filter class="solr.ManagedStopFilterFactory" managed="en" />
				<filter class="solr.WordDelimiterGraphFilterFactory" generateWordParts="1" generateNumberParts="0" catenateWords="1" catenateNumbers="0" catenateAll="0" splitOnNumerics="1" splitOnCaseChange="0" preserveOriginal="1"/>
				<filter class="solr.FlattenGraphFilterFactory"/> <!-- required on index analyzers after graph filters -->
				<filter class="solr.LowerCaseFilterFactory" />
				<filter class="solr.KeywordRepeatFilterFactory" />
				<filter class="solr.SnowballPorterFilterFactory" language="English" protected="protwords.txt" />
				<filter class="solr.LengthFilterFactory" min="2" max="50"/>
				<filter class="solr.RemoveDuplicatesTokenFilterFactory" />
			</analyzer>
			<analyzer type="query">
				<charFilter class="solr.PatternReplaceCharFilterFactory" pattern="[™ ® , \- &apos; &quot;]" replacement=" "/>
				<charFilter class="solr.PatternReplaceCharFilterFactory" pattern="(\d+)\s?\/\s?(\d+)" replacement="$1over$2"/>
				<charFilter class="solr.PatternReplaceCharFilterFactory" pattern="(\d+)[\s-]+\s?(\d+over\d+)" replacement="$1and$2"/>
				<charFilter class="solr.PatternReplaceCharFilterFactory" pattern="(\d+)(?:\s*x\s*|\s*by\s*)(\d+)" replacement="$1by$2"/>
				<tokenizer class="solr.WhitespaceTokenizerFactory" />
				<filter class="solr.EnglishPossessiveFilterFactory" />
				<filter class="solr.ManagedStopFilterFactory" managed="en" />
				<filter class="solr.LowerCaseFilterFactory" />
				<filter class="solr.KeywordRepeatFilterFactory" />
				<filter class="solr.SnowballPorterFilterFactory" language="English" protected="protwords.txt" />
				<filter class="solr.ManagedSynonymGraphFilterFactory" managed="en" />
				<filter class="solr.LengthFilterFactory" min="2" max="50"/>
				<filter class="solr.RemoveDuplicatesTokenFilterFactory" />
			</analyzer>
		</fieldType>
		
		<fieldType name="keywordfilter_en" class="solr.TextField" positionIncrementGap="100">
			<analyzer type="index">
				<tokenizer class="solr.StandardTokenizerFactory" />
				<filter class="solr.EnglishPossessiveFilterFactory" />
				<filter class="solr.ManagedStopFilterFactory" managed="en" />
				<!-- <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt" /> -->
				<filter class="solr.LowerCaseFilterFactory" />
				<!-- <filter class="solr.KeywordRepeatFilterFactory" /> -->
				<filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt" />
				<filter class="solr.PorterStemFilterFactory" />
				<!-- <filter class="solr.SnowballPorterFilterFactory" language="English" /> -->
				<!-- <filter class="solr.EnglishMinimalStemFilterFactory" /> -->
				<!-- <filter class="solr.ASCIIFoldingFilterFactory" /> -->
				<filter class="solr.RemoveDuplicatesTokenFilterFactory" />
			</analyzer>
			<analyzer type="query">
				<tokenizer class="solr.StandardTokenizerFactory" />
				<filter class="solr.EnglishPossessiveFilterFactory" />
				<filter class="solr.ManagedSynonymGraphFilterFactory" managed="en" />
				<filter class="solr.ManagedStopFilterFactory" managed="en" />
				<!-- <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt" /> -->
				<filter class="solr.LowerCaseFilterFactory" />
				<!-- <filter class="solr.KeywordRepeatFilterFactory" /> -->
				<filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt" />
				<filter class="solr.PorterStemFilterFactory" />
				<!-- <filter class="solr.SnowballPorterFilterFactory" language="English" /> -->
				<!-- <filter class="solr.EnglishMinimalStemFilterFactory" /> -->
				<!-- <filter class="solr.ASCIIFoldingFilterFactory" /> -->
				<filter class="solr.RemoveDuplicatesTokenFilterFactory" />
			</analyzer>
		</fieldType>

		<fieldType name="keywordfilter_spell_en" class="solr.TextField" positionIncrementGap="100">
			<analyzer type="index">
				<tokenizer class="solr.StandardTokenizerFactory" />
				<filter class="solr.ManagedStopFilterFactory" managed="en" />
				<!-- <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt" /> -->
				<filter class="solr.LowerCaseFilterFactory" />
				<filter class="solr.RemoveDuplicatesTokenFilterFactory" />
			</analyzer>
			<analyzer type="query">
				<tokenizer class="solr.StandardTokenizerFactory" />
				<filter class="solr.ManagedSynonymGraphFilterFactory" managed="en" />
				<filter class="solr.ManagedStopFilterFactory" managed="en" />
				<!-- <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt" /> -->
				<filter class="solr.LowerCaseFilterFactory" />
				<filter class="solr.RemoveDuplicatesTokenFilterFactory" />
			</analyzer>
		</fieldType>

		<fieldType name="textgen" class="solr.TextField" positionIncrementGap="100">
			<analyzer type="index">
				<charFilter class="solr.PatternReplaceCharFilterFactory" pattern="[™ ® , \- &apos; &quot;]" replacement=" "/>
				<charFilter class="solr.PatternReplaceCharFilterFactory" pattern="(\d+)\s?\/\s?(\d+)" replacement="$1over$2"/>
				<charFilter class="solr.PatternReplaceCharFilterFactory" pattern="(\d+)[\s-]+\s?(\d+over\d+)" replacement="$1and$2"/>
				<charFilter class="solr.PatternReplaceCharFilterFactory" pattern="(\d+)(?:\s*x\s*|\s*by\s*)(\d+)" replacement="$1by$2"/>
				<tokenizer class="solr.StandardTokenizerFactory" />
				<filter class="solr.ManagedStopFilterFactory" managed="en" />
				<filter class="solr.SnowballPorterFilterFactory" language="English" protected="protwords.txt" />
				<filter class="solr.WordDelimiterGraphFilterFactory" generateWordParts="1" generateNumberParts="0" catenateWords="1" catenateNumbers="0" catenateAll="0" splitOnNumerics="1" splitOnCaseChange="0" preserveOriginal="1"/>
				<filter class="solr.FlattenGraphFilterFactory"/> <!-- required on index analyzers after graph filters -->
				<filter class="solr.LengthFilterFactory" min="2" max="50"/>
				<filter class="solr.LowerCaseFilterFactory" />
				<filter class="solr.RemoveDuplicatesTokenFilterFactory" />
			</analyzer>
			<analyzer type="query">
				<charFilter class="solr.PatternReplaceCharFilterFactory" pattern="[™ ® , \- &apos; &quot;]" replacement=" "/>
				<charFilter class="solr.PatternReplaceCharFilterFactory" pattern="(\d+)\s?\/\s?(\d+)" replacement="$1over$2"/>
				<charFilter class="solr.PatternReplaceCharFilterFactory" pattern="(\d+)[\s-]+\s?(\d+over\d+)" replacement="$1and$2"/>
				<charFilter class="solr.PatternReplaceCharFilterFactory" pattern="(\d+)(?:\s*x\s*|\s*by\s*)(\d+)" replacement="$1by$2"/>
				<tokenizer class="solr.StandardTokenizerFactory" />
				<filter class="solr.ManagedStopFilterFactory" managed="en" />
				<filter class="solr.SnowballPorterFilterFactory" language="English" protected="protwords.txt" />
				<filter class="solr.ManagedSynonymGraphFilterFactory" managed="en" />
				<filter class="solr.LowerCaseFilterFactory" />
			</analyzer>
		</fieldType>


		<fieldType name="textgen_en" class="solr.TextField" positionIncrementGap="100">
			<analyzer type="index">
				<charFilter class="solr.HTMLStripCharFilterFactory"/>
				<charFilter class="solr.PatternReplaceCharFilterFactory" pattern="[™ ® , \- &apos; &quot;]" replacement=" "/>
				<charFilter class="solr.PatternReplaceCharFilterFactory" pattern="(\d+)\s?\/\s?(\d+)" replacement="$1over$2"/>
				<charFilter class="solr.PatternReplaceCharFilterFactory" pattern="(\d+)[\s-]+\s?(\d+over\d+)" replacement="$1and$2"/>
				<charFilter class="solr.PatternReplaceCharFilterFactory" pattern="(\d+)(?:\s*x\s*|\s*by\s*)(\d+)" replacement="$1by$2"/>
				<tokenizer class="solr.WhitespaceTokenizerFactory" />
				<filter class="solr.EnglishPossessiveFilterFactory" />
				<filter class="solr.ManagedStopFilterFactory" managed="en" />
				<filter class="solr.KeywordRepeatFilterFactory" />
				<filter class="solr.WordDelimiterGraphFilterFactory" generateWordParts="1" generateNumberParts="0" catenateWords="1" catenateNumbers="0" catenateAll="1" splitOnNumerics="1" splitOnCaseChange="0" preserveOriginal="1"/>
				<filter class="solr.FlattenGraphFilterFactory"/> <!-- required on index analyzers after graph filters -->
				<filter class="solr.LowerCaseFilterFactory" />
				<filter class="solr.SnowballPorterFilterFactory" language="English" protected="protwords.txt" />
				<filter class="solr.LengthFilterFactory" min="2" max="50"/>
				<filter class="solr.RemoveDuplicatesTokenFilterFactory" />
			</analyzer>
			<analyzer type="query">
				<charFilter class="solr.PatternReplaceCharFilterFactory" pattern="[™ ® , \- &apos; &quot;]" replacement=" "/>
				<charFilter class="solr.PatternReplaceCharFilterFactory" pattern="(\d+)\s?\/\s?(\d+)" replacement="$1over$2"/>
				<charFilter class="solr.PatternReplaceCharFilterFactory" pattern="(\d+)[\s-]+\s?(\d+over\d+)" replacement="$1and$2"/>
				<charFilter class="solr.PatternReplaceCharFilterFactory" pattern="(\d+)(?:\s*x\s*|\s*by\s*)(\d+)" replacement="$1by$2"/>
				<tokenizer class="solr.WhitespaceTokenizerFactory" />
				<filter class="solr.EnglishPossessiveFilterFactory" />
				<filter class="solr.ManagedStopFilterFactory" managed="en" />
				<filter class="solr.KeywordRepeatFilterFactory" />
				<filter class="solr.WordDelimiterGraphFilterFactory" generateWordParts="1" generateNumberParts="0" catenateWords="1" catenateNumbers="0" catenateAll="1" splitOnNumerics="1" splitOnCaseChange="0" preserveOriginal="1"/>
				<filter class="solr.FlattenGraphFilterFactory"/> <!-- required on index analyzers after graph filters -->
				<filter class="solr.LowerCaseFilterFactory" />
				<filter class="solr.SnowballPorterFilterFactory" language="English" protected="protwords.txt" />
				<filter class="solr.ManagedSynonymGraphFilterFactory" managed="en" />
				<filter class="solr.LengthFilterFactory" min="2" max="50"/>
				<filter class="solr.RemoveDuplicatesTokenFilterFactory" />
			</analyzer>
		</fieldType>

		<fieldType name="ngram" class="solr.TextField" sortMissingLast="true" positionIncrementGap="100">
			<analyzer type="index">
				<charFilter class="solr.PatternReplaceCharFilterFactory"
							pattern="(\b([A-Z]?[a-z]+)\b)|([a-zA-Z0-9]*-[-a-zA-Z0-9]*)|(\/)/g" replacement=" "/>
				<tokenizer class="solr.WhitespaceTokenizerFactory" />
				<filter class="solr.LowerCaseFilterFactory" />
				<filter class="solr.TrimFilterFactory" />
				<filter class="solr.WordDelimiterGraphFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="1" catenateNumbers="0" catenateAll="1" splitOnNumerics="1" splitOnCaseChange="0" preserveOriginal="1"/>
				<!--<filter class="solr.EdgeNGramFilterFactory" minGramSize="1" maxGramSize="30"/> -->
			</analyzer>
			<analyzer type="query">
				<tokenizer class="solr.KeywordTokenizerFactory"/>
				<filter class="solr.LowerCaseFilterFactory" />
				<filter class="solr.TrimFilterFactory" />
			</analyzer>
		</fieldType>

		<fieldType name="edgengram" class="solr.TextField" sortMissingLast="true" positionIncrementGap="500">
			<analyzer type="index">
				<charFilter class="solr.PatternReplaceCharFilterFactory" pattern="[^a-zA-Z0-9\/]" replacement=""/>
				<tokenizer class="solr.KeywordTokenizerFactory"/>
				<filter class="solr.LowerCaseFilterFactory" />
				<filter class="solr.TrimFilterFactory" />
				<filter class="solr.EdgeNGramFilterFactory" minGramSize="2" maxGramSize="100"/>
			</analyzer>
			<analyzer type="query">
				<charFilter class="solr.PatternReplaceCharFilterFactory" pattern="[^a-zA-Z0-9\/]" replacement=""/>
				<tokenizer class="solr.KeywordTokenizerFactory"/>
				<filter class="solr.LowerCaseFilterFactory" />
				<filter class="solr.TrimFilterFactory" />
			</analyzer>
		</fieldType>
		<!-- SST custom END -->

		<fieldType name="text_spell" class="solr.TextField" positionIncrementGap="100">
			<analyzer type="index">
				<tokenizer class="solr.StandardTokenizerFactory" />
				<filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" />
				<filter class="solr.LowerCaseFilterFactory" />
				<filter class="solr.RemoveDuplicatesTokenFilterFactory" />
			</analyzer>
			<analyzer type="query">
				<tokenizer class="solr.StandardTokenizerFactory" />
				<filter class="solr.SynonymGraphFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true" />
				<filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" />
				<filter class="solr.LowerCaseFilterFactory" />
				<filter class="solr.RemoveDuplicatesTokenFilterFactory" />
			</analyzer>
		</fieldType>

		<fieldType name="text_spell_en" class="solr.TextField" positionIncrementGap="100">
			<analyzer>
				<tokenizer class="solr.StandardTokenizerFactory" />
				<filter class="solr.LowerCaseFilterFactory" />
				<filter class="solr.PatternReplaceFilterFactory" pattern="(['’])" replacement=" " />
				<filter class="solr.EnglishMinimalStemFilterFactory" />
				<filter class="solr.ManagedSynonymGraphFilterFactory" managed="en" />
				<filter class="solr.ManagedStopFilterFactory" managed="en" />
				<filter class="solr.StopFilterFactory" words="lang/stopwords_en.txt" ignoreCase="true" />
				<filter class="solr.TrimFilterFactory" />
				<filter class="solr.RemoveDuplicatesTokenFilterFactory" />
			</analyzer>
		</fieldType>
		
		<!-- Sortable Text -->

		<fieldType name="sortabletext" class="solr.TextField" sortMissingLast="true" positionIncrementGap="100">
			<analyzer>
				<tokenizer class="solr.KeywordTokenizerFactory"/>
				<filter class="solr.LowerCaseFilterFactory" />
				<filter class="solr.TrimFilterFactory" />
			</analyzer>
		</fieldType>

	</types>

	<similarity class="solr.SchemaSimilarityFactory" />

	<fields>
		<field name="_version_" type="long" indexed="true" stored="true" multiValued="false" />
		<field name="indexOperationId" type="long" indexed="true" stored="true" multiValued="false" />
		<field name="id" type="string" indexed="true" stored="true" multiValued="false" />
		<field name="pk" type="long" indexed="true" stored="true" multiValued="false" />
		<field name="catalogId" type="string" indexed="true" stored="true" multiValued="false" />
		<field name="catalogVersion" type="string" indexed="true" stored="true" multiValued="false" />

		<dynamicField name="*_boolean" type="boolean" indexed="true" stored="true" />
		<dynamicField name="*_boolean_mv" type="boolean" indexed="true" stored="true" multiValued="true" />
		<dynamicField name="*_int" type="int" indexed="true" stored="true" />
		<dynamicField name="*_int_mv" type="int" indexed="true" stored="true" multiValued="true" />
		<dynamicField name="*_long" type="long" indexed="true" stored="true" />
		<dynamicField name="*_long_mv" type="long" indexed="true" stored="true" multiValued="true" />
		<dynamicField name="*_float" type="float" indexed="true" stored="true" />
		<dynamicField name="*_float_mv" type="float" indexed="true" stored="true" multiValued="true" />
		<dynamicField name="*_double" type="double" indexed="true" stored="true" />
		<dynamicField name="*_double_mv" type="double" indexed="true" stored="true" multiValued="true" />
		<dynamicField name="*_date" type="date" indexed="true" stored="true" />
		<dynamicField name="*_date_mv" type="date" indexed="true" stored="true" multiValued="true" />
		<dynamicField name="*_string" type="string" indexed="true" stored="true" />
		<dynamicField name="*_string_mv" type="string" indexed="true" stored="true" multiValued="true" />

		<dynamicField name="*_text" type="text" indexed="true" stored="true" />
		<dynamicField name="*_text_mv" type="text" indexed="true" stored="true" multiValued="true" />

		<dynamicField name="*_text_en" type="text_en" indexed="true" stored="true" />
		<dynamicField name="*_text_en_mv" type="text_en" indexed="true" stored="true" multiValued="true" />


		<!-- SST custom START -->
		<dynamicField name="*_ngram" type="ngram" indexed="true" stored="true" />
		<dynamicField name="*_ngram_en" type="ngram" indexed="true" stored="true" />
		<dynamicField name="*_edgengram" type="edgengram" indexed="true" stored="true" />
		<dynamicField name="*_edgengram_en" type="edgengram" indexed="true" stored="true" />
		<dynamicField name="*_edgengram_mv" type="edgengram" indexed="true" stored="true" multiValued="true" />
		<!-- SST custom END -->

		<field name="spellcheck" type="text_spell" indexed="true" stored="true" multiValued="true" />
		<field name="spellcheck_en" type="text_spell_en" indexed="true" stored="true" multiValued="true" />


		<copyField source="spellcheck" dest="spellcheck_en" />

		<field name="autosuggest" type="sortabletext" indexed="true" stored="true" multiValued="true" />
		<field name="autosuggest_en" type="sortabletext" indexed="true" stored="true" multiValued="true" />
		<field name="autosuggest_en_combined" type="sortabletext" indexed="true" stored="true" multiValued="true" />

		<copyField source="autosuggest" dest="autosuggest_en" />

		<dynamicField name="*_sortabletext" type="sortabletext" indexed="true" stored="true" />
		<dynamicField name="*_sortabletext_mv" type="sortabletext" indexed="true" stored="true"
			multiValued="true" />
		<dynamicField name="*_textgen" type="textgen" indexed="true" stored="true" />
		<dynamicField name="*_textgen_mv" type="textgen" indexed="true" stored="true" multiValued="true" />
		
		<dynamicField name="*_keywordfilter" type="keywordfilter" indexed="true" stored="true" />
		<dynamicField name="*_keywordfilter_mv" type="keywordfilter" indexed="true" stored="true" multiValued="true" />
		<dynamicField name="*_keywordfilter_en" type="keywordfilter_en" stored="true" indexed="true"/>
		<dynamicField name="*_keywordfilter_en_mv" type="keywordfilter_en" multiValued="true" stored="true" indexed="true"/>


		<!-- locale specific autosuggest -->
		<field name="autosuggest_en_us" type="sortabletext" indexed="true" stored="true" multiValued="true" />
		<field name="autosuggest_en_ca" type="sortabletext" indexed="true" stored="true" multiValued="true" />
		<field name="autosuggest_en_us_buyable" type="sortabletext" indexed="true" stored="true" multiValued="true" />
		<field name="autosuggest_en_ca_buyable" type="sortabletext" indexed="true" stored="true" multiValued="true" />

		<copyField source="variantSkus_us_edgengram_mv" dest="autosuggest_en_us" />
		<copyField source="variantSkus_ca_edgengram_mv" dest="autosuggest_en_ca" />
		<copyField source="buyableVariantSkus_us_edgengram_mv" dest="autosuggest_en_us_buyable" />
		<copyField source="buyableVariantSkus_ca_edgengram_mv" dest="autosuggest_en_ca_buyable" />

		<copyField source="variantSkus_edgengram_mv" dest="autosuggest_en_combined" />

	</fields>

	<uniqueKey>id</uniqueKey>
</schema>
